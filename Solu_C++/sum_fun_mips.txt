sum:
    addi $sp, $sp, -8         # Make space on the stack
    sw   $ra, 4($sp)          # Save return address
    sw   $a1, 0($sp)          # Save current acc

    slt  $t0, $zero, $a0      # $t0 = 1 if n > 0
    beq  $t0, $zero, base_case  # If n <= 0, go to base case

    add  $t1, $a1, $a0        # t1 = acc + n
    addi $t2, $a0, -1         # t2 = n - 1

    add  $a0, $t2, $zero      # a0 = n - 1
    add  $a1, $t1, $zero      # a1 = acc + n

    jal  sum                  # Recursive call

    lw   $ra, 4($sp)          # Restore return address
    addi $sp, $sp, 8          # Pop the stack
    jr   $ra                  # Return

base_case:
    add  $v0, $a1, $zero      # v0 = acc (return value)
    lw   $ra, 4($sp)          # Restore return address
    addi $sp, $sp, 8          # Pop the stack
    jr   $ra                  # Return
